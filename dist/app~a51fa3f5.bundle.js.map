{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";0YACA,smNAIA,IAAQA,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QADwD,SAChDC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC1D,IAuBH,QApB+B,CACvBC,cADuB,SACTC,GAAI,oGACjBA,EADiB,iEAGNP,EAHM,uCAGKQ,IAAIT,EAAmBQ,IAH5B,4CAIvB,EACKE,iBANuB,WAMJ,iHACTT,EADS,uCACEU,OAAOX,IADT,4CAExB,EACKY,cATuB,SASTC,GAAY,oGACzBA,EAAWC,eAAe,MADD,iEAIhBb,EAJgB,uCAILc,IAAIf,EAAmBa,IAJlB,4CAK/B,EACKG,iBAfuB,SAeNR,GAAI,iHACXP,EADW,8CACOD,EAAmBQ,IAD1B,4CAE1B,gDCvBH,QALqB,CACnBS,OAAQ,SAACT,GAAD,gBAAWV,EAAAA,EAAAA,SAAX,kBAAoCU,EAApC,EACRU,KAAM,GAAF,OAAKpB,EAAAA,EAAAA,SAAL,4PCHN,4wNAcA,QAbMqB,8LACJ,sGACyBC,MAAMC,EAAAA,MAD/B,cACQC,EADR,gBAE6BA,EAASC,OAFtC,cAEQC,EAFR,yBAGSA,EAAaC,aAHtB,qIAMA,WAA8BjB,GAA9B,uFACyBY,MAAMC,EAAAA,OAAoBb,IADnD,cACQc,EADR,yBAESA,EAASC,QAFlB,yJAPIJ,mCCSN,QAXe,CACbO,SAAU,uCACVC,iBAAkB,oDAClBC,iBAAkB,qDAClBC,iBAAkB,oDAClBC,YAAY,IAAIC,MAAOC,cACvBnC,cAAe,sBACfE,iBAAkB,EAClBC,kBAAmB,8ECIfiC,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,cAC/BC,OAAQF,SAASC,cAAc,QAC/BE,QAASH,SAASC,cAAc,oBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACL,IAEDF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACD","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurants-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurants-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable consistent-return */\r\n/* eslint-disable no-prototype-builtins */\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst favoriteRestaurantsIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    } return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurant() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putRestaurant(restaurant) {\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default favoriteRestaurantsIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n  LIST: `${CONFIG.BASE_URL}list`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass restaurantSource {\r\n  static async list() {\r\n    const response = await fetch(API_ENDPOINT.LIST);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    return response.json();\r\n  }\r\n}\r\n\r\nexport default restaurantSource;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL_S: 'https://restaurant-api.dicoding.dev/images/small/',\r\n  BASE_IMAGE_URL_M: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  BASE_IMAGE_URL_L: 'https://restaurant-api.dicoding.dev/images/Large/',\r\n  CACHE_NAME: new Date().toISOString(),\r\n  DATABASE_NAME: 'restaurant-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurant',\r\n};\r\n\r\nexport default CONFIG;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable import/extensions */\r\nimport 'regenerator-runtime';\r\nimport '../styles/main.css';\r\nimport './views/component/jumbotron-component.js';\r\nimport './views/component/footer-component.js';\r\nimport App from './views/app';\r\nimport swRegister from './utils/sw-register';\r\n\r\nimport 'lazysizes';\r\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\r\n\r\nconst app = new App({\r\n  button: document.querySelector('#hamburger'),\r\n  drawer: document.querySelector('#nav'),\r\n  content: document.querySelector('#main-content'),\r\n});\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  app.renderPage();\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  app.renderPage();\r\n  swRegister();\r\n});\r\n"],"names":["DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurant","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","DETAIL","LIST","restaurantSource","fetch","API_ENDPOINT","response","json","responseJson","restaurants","BASE_URL","BASE_IMAGE_URL_S","BASE_IMAGE_URL_M","BASE_IMAGE_URL_L","CACHE_NAME","Date","toISOString","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}